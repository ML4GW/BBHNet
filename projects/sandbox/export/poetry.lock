[[package]]
name = "aiohttp"
version = "3.8.3"
description = "Async http client/server framework (asyncio)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiosignal = ">=1.1.2"
async-timeout = ">=4.0.0a3,<5.0"
attrs = ">=17.3.0"
charset-normalizer = ">=2.0,<3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["aiodns", "brotli", "cchardet"]

[[package]]
name = "aiosignal"
version = "1.2.0"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "astropy"
version = "4.3.1"
description = "Astronomy and astrophysics core library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.17"
pyerfa = ">=1.7.3"

[package.extras]
all = ["scipy (>=1.1)", "certifi", "dask", "h5py", "beautifulsoup4", "html5lib", "bleach", "PyYAML (>=3.13)", "pandas", "sortedcontainers", "pytz", "jplephem", "matplotlib (>=3.0,!=3.4.0)", "mpmath", "asdf (>=2.6)", "bottleneck", "ipython (>=4.2)", "pytest"]
docs = ["sphinx (<4)", "sphinx-astropy (>=1.3)", "pytest", "PyYAML (>=3.13)", "scipy (>=1.1)", "matplotlib (>=3.1,!=3.4.0)", "sphinx-changelog (>=1.1.0)", "packaging"]
test = ["pytest-astropy (>=0.8)", "pytest-xdist", "objgraph", "ipython (>=4.2)", "coverage", "skyfield (>=1.20)", "sgp4 (>=2.3)", "packaging"]

[[package]]
name = "async-timeout"
version = "4.0.2"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "atomicwrites"
version = "1.4.1"
description = "Atomic file writes."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "22.1.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "zope.interface", "furo", "sphinx", "sphinx-notfound-page", "pre-commit", "cloudpickle"]
docs = ["furo", "sphinx", "zope.interface", "sphinx-notfound-page"]
tests = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "zope.interface", "cloudpickle"]
tests_no_zope = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "cloudpickle"]

[[package]]
name = "bbhnet.architectures"
version = "0.0.1"
description = "BBHNet neural network architecture zoo"
category = "main"
optional = false
python-versions = ">=3.8,<3.11"
develop = true

[package.dependencies]
"bbhnet.data" = {path = "../data", develop = true}
"hermes.typeo" = {version = "^0.1.4", optional = true}
numpy = "^1.22.3"
torch = "^1.0"

[package.extras]
wrapper = ["hermes.typeo (>=0.1.4,<0.2.0)"]

[package.source]
type = "directory"
url = "../../../libs/architectures"

[[package]]
name = "bbhnet.base"
version = "0.0.1"
description = "Base environment for setting version constraints"
category = "main"
optional = false
python-versions = ">=3.8,<3.11"
develop = true

[package.dependencies]
astropy = {version = "<5.0", optional = true}
numpy = {version = ">=1.22.0,<1.22.4", optional = true}
packaging = "<21.0"
scipy = {version = "<1.8", optional = true}

[package.extras]
gwpy = ["scipy (<1.8)", "astropy (<5.0)"]
numpy = ["numpy (>=1.22.0,<1.22.4)"]

[package.source]
type = "directory"
url = "../../../libs/base"

[[package]]
name = "bbhnet.data"
version = "0.0.1"
description = "Tools for data loading and preprocessing"
category = "main"
optional = false
python-versions = ">=3.8,<3.11"
develop = true

[package.dependencies]
"bbhnet.injection" = {path = "../injection", develop = true}
h5py = "^3.6"
ml4gw = {path = "../../ml4gw", develop = true}

[package.source]
type = "directory"
url = "../../../libs/data"

[[package]]
name = "bbhnet.injection"
version = "0.0.1"
description = "Utilities for generating BBH signals using bilby"
category = "main"
optional = false
python-versions = ">=3.8,<3.11"
develop = true

[package.dependencies]
"bbhnet.base" = {path = "../base", develop = true, extras = ["gwpy", "numpy"]}
bilby = "<1.2"
lalsuite = "^7.4"

[package.source]
type = "directory"
url = "../../../libs/injection"

[[package]]
name = "bbhnet.logging"
version = "0.0.1"
description = "BBHNet logging utilities"
category = "main"
optional = false
python-versions = ">=3.8,<3.11"
develop = true

[package.source]
type = "directory"
url = "../../../libs/logging"

[[package]]
name = "bilby"
version = "1.1.5"
description = "A user-friendly Bayesian inference library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
astropy = "*"
attrs = "*"
corner = "*"
dill = "*"
dynesty = "<1.1"
emcee = "*"
h5py = "*"
matplotlib = ">=2.1"
mock = "*"
numpy = "*"
pandas = "*"
scipy = ">=1.5"
tables = "*"
tqdm = "*"

[package.extras]
gw = ["astropy", "gwpy", "lalsuite"]

[[package]]
name = "brotli"
version = "1.0.9"
description = "Python bindings for the Brotli compression library"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "certifi"
version = "2022.9.24"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.15.1"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "charset-normalizer"
version = "2.1.1"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "contourpy"
version = "1.0.5"
description = "Python library for calculating contours of 2D quadrilateral grids"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.16"

[package.extras]
test-no-codebase = ["pillow", "matplotlib", "pytest"]
test-minimal = ["pytest"]
test = ["isort", "flake8", "pillow", "matplotlib", "pytest"]
docs = ["sphinx-rtd-theme", "sphinx", "docutils (<0.18)"]
bokeh = ["selenium", "bokeh"]

[[package]]
name = "corner"
version = "2.2.1"
description = "Make some beautiful corner plots"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
matplotlib = ">=2.1"

[package.extras]
arviz = ["arviz (>=0.9)"]
dev = ["pytest (>=3.6)", "pytest-cov (>=2.6.1)", "black", "isort", "toml", "arviz (>=0.9)", "sphinx (>=1.7.5)", "pandoc", "myst-nb", "sphinx-book-theme", "pre-commit", "flake8", "pep517", "twine"]
docs = ["arviz (>=0.9)", "sphinx (>=1.7.5)", "pandoc", "myst-nb", "sphinx-book-theme"]
test = ["pytest (>=3.6)", "pytest-cov (>=2.6.1)", "black", "isort", "toml"]

[[package]]
name = "cryptography"
version = "38.0.1"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.12"

[package.extras]
docs = ["sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)", "sphinx-rtd-theme"]
docstest = ["pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
pep8test = ["black", "flake8", "flake8-import-order", "pep8-naming"]
sdist = ["setuptools-rust (>=0.11.4)"]
ssh = ["bcrypt (>=3.1.5)"]
test = ["pytest (>=6.2.0)", "pytest-benchmark", "pytest-cov", "pytest-subtests", "pytest-xdist", "pretend", "iso8601", "pytz", "hypothesis (>=1.11.4,!=3.79.2)"]

[[package]]
name = "cycler"
version = "0.11.0"
description = "Composable style cycles"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "dill"
version = "0.3.6"
description = "serialize all of python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
graph = ["objgraph (>=1.7.2)"]

[[package]]
name = "dqsegdb2"
version = "1.1.3"
description = "Simplified python interface to DQSEGDB"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
igwn-auth-utils = ">=0.3.1"
ligo-segments = ">=1.0.0"

[package.extras]
test = ["requests-mock (>=1.5.0)", "pytest-cov (>=2.5.1)", "pytest (>=2.9.2)"]
lint = ["flake8-bandit", "flake8 (>=3.7.0)"]
docs = ["sphinx-immaterial", "sphinx-automodapi", "sphinx"]

[[package]]
name = "dynesty"
version = "1.0.1"
description = "A dynamic nested sampling package for computing Bayesian posteriors and evidences."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
matplotlib = "*"
numpy = "*"
scipy = "*"
six = "*"

[[package]]
name = "emcee"
version = "3.1.3"
description = "The Python ensemble sampling toolkit for MCMC"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"

[package.extras]
extras = ["h5py", "scipy"]
tests = ["pytest", "pytest-cov", "coverage"]

[[package]]
name = "fonttools"
version = "4.38.0"
description = "Tools to manipulate font files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
all = ["fs (>=2.2.0,<3)", "lxml (>=4.0,<5)", "zopfli (>=0.1.4)", "lz4 (>=1.7.4.2)", "matplotlib", "sympy", "skia-pathops (>=0.5.0)", "uharfbuzz (>=0.23.0)", "brotlicffi (>=0.8.0)", "scipy", "brotli (>=1.0.1)", "munkres", "unicodedata2 (>=14.0.0)", "xattr"]
graphite = ["lz4 (>=1.7.4.2)"]
interpolatable = ["scipy", "munkres"]
lxml = ["lxml (>=4.0,<5)"]
pathops = ["skia-pathops (>=0.5.0)"]
plot = ["matplotlib"]
repacker = ["uharfbuzz (>=0.23.0)"]
symfont = ["sympy"]
type1 = ["xattr"]
ufo = ["fs (>=2.2.0,<3)"]
unicode = ["unicodedata2 (>=14.0.0)"]
woff = ["zopfli (>=0.1.4)", "brotlicffi (>=0.8.0)", "brotli (>=1.0.1)"]

[[package]]
name = "frozenlist"
version = "1.3.1"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "gevent"
version = "22.10.1"
description = "Coroutine-based network library"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5"

[package.dependencies]
cffi = {version = ">=1.12.2", markers = "platform_python_implementation == \"CPython\" and sys_platform == \"win32\""}
greenlet = {version = ">=1.1.3,<2.0", markers = "platform_python_implementation == \"CPython\""}
setuptools = "*"
"zope.event" = "*"
"zope.interface" = "*"

[package.extras]
dnspython = ["dnspython (>=1.16.0,<2.0)", "idna"]
docs = ["repoze.sphinx.autointerface", "sphinxcontrib-programoutput", "zope.schema"]
monitor = ["psutil (>=5.7.0)"]
recommended = ["cffi (>=1.12.2)", "dnspython (>=1.16.0,<2.0)", "idna", "selectors2", "backports.socketpair", "psutil (>=5.7.0)"]
test = ["requests", "objgraph", "cffi (>=1.12.2)", "dnspython (>=1.16.0,<2.0)", "idna", "selectors2", "futures", "mock", "backports.socketpair", "contextvars (==2.4)", "coverage (>=5.0)", "coveralls (>=1.7.0)", "psutil (>=5.7.0)"]

[[package]]
name = "geventhttpclient"
version = "2.0.8"
description = "http client library for gevent"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
brotli = "*"
certifi = "*"
gevent = ">=0.13"
six = "*"

[[package]]
name = "greenlet"
version = "1.1.3.post0"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*"

[package.extras]
docs = ["sphinx"]

[[package]]
name = "grpcio"
version = "1.41.0"
description = "HTTP/2-based RPC framework"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.5.2"

[package.extras]
protobuf = ["grpcio-tools (>=1.41.0)"]

[[package]]
name = "gwdatafind"
version = "1.1.2"
description = "The GWDataFind data discovery client"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
igwn-auth-utils = ">=0.3.1"
ligo-segments = "*"

[package.extras]
test = ["requests-mock", "pytest-cov", "pytest (>=2.8.0)"]
lint = ["radon", "flake8-docstrings", "flake8-bandit", "flake8"]
docs = ["sphinx-tabs", "sphinx-rtd-theme", "sphinx-automodapi", "sphinx (>=1.8.0)", "numpydoc"]

[[package]]
name = "gwosc"
version = "0.6.1"
description = "A python interface to the GW Open Science data archive"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
requests = ">=1.0.0"

[package.extras]
test = ["requests-mock (>=1.5.0)", "pytest-socket", "pytest-cov", "pytest (>=2.7.0)"]
docs = ["sphinx-rtd-theme", "sphinx-automodapi", "sphinx"]

[[package]]
name = "gwpy"
version = "2.1.5"
description = "A python package for gravitational-wave astrophysics"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
astropy = ">=4.0"
dqsegdb2 = "*"
gwdatafind = ">=1.1.0"
gwosc = ">=0.5.3"
h5py = ">=2.8.0"
ligo-segments = ">=1.0.0"
ligotimegps = ">=1.2.1"
matplotlib = ">=3.3.0"
numpy = ">=1.16"
python-dateutil = "*"
scipy = ">=1.2.0"
tqdm = ">=4.10.0"

[package.extras]
conda = ["python-framel (>=8.40.1)", "python-nds2-client", "python-ldas-tools-framecpp"]
dev = ["ciecplib", "maya", "pandas", "psycopg2", "pymysql", "pyrxp", "sqlalchemy", "uproot (>=3.11)", "uproot3", "astropy (<5.1a0)", "lalsuite", "lscsoft-glue", "pycbc (>=1.13.4)", "python-ligo-lw (>=1.7.0)"]
docs = ["numpydoc (>=0.8.0)", "requests", "sphinx (>=4.0.0)", "sphinx-automodapi", "sphinx-material (>=0.0.32)", "sphinx-panels (>=0.6.0)", "sphinxcontrib-programoutput"]
test = ["coverage[toml] (>=5.0)", "freezegun (>=0.3.12)", "pytest (>=3.9.1)", "pytest-cov (>=2.4.0)", "pytest-socket", "pytest-xdist", "requests-mock"]

[[package]]
name = "h5py"
version = "3.7.0"
description = "Read and write HDF5 files from Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.14.5"

[[package]]
name = "hermes.quiver"
version = "0.1.0"
description = "Model export utilities"
category = "main"
optional = false
python-versions = ">=3.8,<3.11"
develop = true

[package.dependencies]
nvidia-tensorrt = {version = "^8.0", optional = true}
protobuf = "^3.17"
requests = "^2.26.0"
torch = {version = "^1.7", optional = true}
tritonclient = {version = "^2.22", extras = ["all"]}
urllib3 = {version = "^1.26", optional = true}

[package.extras]
tensorflow = ["tensorflow (>=2.3,<3.0)", "libclang (<12.0)"]
torch = ["torch (>=1.7,<2.0)", "urllib3 (>=1.26,<2.0)"]
gcs = ["google-cloud-storage (>=1.38,<2.0)"]
tensorrt = ["nvidia-tensorrt (>=8.0,<9.0)"]

[package.source]
type = "directory"
url = "../../../hermes/hermes/hermes.quiver"

[[package]]
name = "hermes.typeo"
version = "0.1.5"
description = "Utilities for running functions as scripts"
category = "main"
optional = false
python-versions = ">=3.8,<4.0"

[package.dependencies]
toml = ">=0.10.2,<0.11.0"

[[package]]
name = "idna"
version = "3.4"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "igwn-auth-utils"
version = "0.3.1"
description = "Authorisation utilities for IGWN"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cryptography = ">=2.3"
requests = ">=2.14"
safe-netrc = ">=1.0.0"
scitokens = ">=1.7.0"

[package.extras]
test = ["safe-netrc (>=1.0.0)", "requests-mock", "requests (>=2.14)", "pytest-cov", "pytest (>=3.9.1)"]
lint = ["flake8-bandit", "flake8 (>=3.7.0)"]
docs = ["sphinx-immaterial-igwn", "sphinx (>=4.0.0)"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "kiwisolver"
version = "1.4.4"
description = "A fast implementation of the Cassowary constraint solver"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "lalsuite"
version = "7.10"
description = "LIGO Scientific Collaboration Algorithm Library - minimal Python package"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
astropy = "*"
ligo-segments = "*"
lscsoft-glue = "*"
matplotlib = "*"
numpy = ">=1.7"
python-dateutil = "*"
scipy = "*"

[package.extras]
lalinference = ["gwdatafind", "gwpy"]
test = ["pytest"]

[[package]]
name = "ligo-segments"
version = "1.4.0"
description = "Representations of semi-open intervals"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "ligotimegps"
version = "2.0.1"
description = "A pure-python version of lal.LIGOTimeGPS"
category = "main"
optional = false
python-versions = ">=3.4"

[[package]]
name = "lscsoft-glue"
version = "3.0.1"
description = "Grid LSC User Engine"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
ligo-segments = "*"
numpy = "*"
pyOpenSSL = "*"
pyRXP = "*"
six = "*"

[[package]]
name = "matplotlib"
version = "3.6.1"
description = "Python plotting package"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
contourpy = ">=1.0.1"
cycler = ">=0.10"
fonttools = ">=4.22.0"
kiwisolver = ">=1.0.1"
numpy = ">=1.19"
packaging = ">=20.0"
pillow = ">=6.2.0"
pyparsing = ">=2.2.1"
python-dateutil = ">=2.7"
setuptools_scm = ">=7"

[[package]]
name = "ml4gw"
version = "0.0.1"
description = "Tools for building training torch models on gravitational wave data"
category = "main"
optional = false
python-versions = ">=3.8,<3.11"
develop = true

[package.dependencies]
bilby = "^1.1"
gwpy = "^2.1"
torch = "^1.10"
torchtyping = "^0.1"

[package.source]
type = "directory"
url = "../../../ml4gw"

[[package]]
name = "mock"
version = "4.0.3"
description = "Rolling backport of unittest.mock for all Pythons"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
build = ["twine", "wheel", "blurb"]
docs = ["sphinx"]
test = ["pytest (<5.4)", "pytest-cov"]

[[package]]
name = "multidict"
version = "6.0.2"
description = "multidict implementation"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "numexpr"
version = "2.8.4"
description = "Fast numerical expression evaluator for NumPy"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.13.3"

[[package]]
name = "numpy"
version = "1.22.3"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "nvidia-cublas-cu11"
version = "2022.4.8"
description = "CUBLAS native runtime libraries Metapackage"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
nvidia-cublas-cu117 = "*"

[package.source]
type = "legacy"
url = "https://pypi.ngc.nvidia.com"
reference = "ngc"

[[package]]
name = "nvidia-cublas-cu117"
version = "11.10.1.25"
description = "CUBLAS native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
setuptools = "*"
wheel = "*"

[package.source]
type = "legacy"
url = "https://pypi.ngc.nvidia.com"
reference = "ngc"

[[package]]
name = "nvidia-cuda-runtime-cu11"
version = "2022.4.25"
description = "CUDA Runtime native Libraries Metapackage"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
nvidia-cuda-runtime-cu117 = "*"

[package.source]
type = "legacy"
url = "https://pypi.ngc.nvidia.com"
reference = "ngc"

[[package]]
name = "nvidia-cuda-runtime-cu117"
version = "11.7.60"
description = "CUDA Runtime native Libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
setuptools = "*"
wheel = "*"

[package.source]
type = "legacy"
url = "https://pypi.ngc.nvidia.com"
reference = "ngc"

[[package]]
name = "nvidia-cudnn-cu11"
version = "2022.5.19"
description = "cuDNN runtime libraries Metapackage"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
nvidia-cudnn-cu116 = "*"

[package.source]
type = "legacy"
url = "https://pypi.ngc.nvidia.com"
reference = "ngc"

[[package]]
name = "nvidia-cudnn-cu116"
version = "8.4.0.27"
description = "cuDNN runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
setuptools = "*"
wheel = "*"

[package.source]
type = "legacy"
url = "https://pypi.ngc.nvidia.com"
reference = "ngc"

[[package]]
name = "nvidia-tensorrt"
version = "8.2.3.0"
description = "A high performance deep learning inference library"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
nvidia-cublas-cu11 = "*"
nvidia-cuda-runtime-cu11 = "*"
nvidia-cudnn-cu11 = "*"

[package.extras]
numpy = ["numpy"]

[package.source]
type = "legacy"
url = "https://pypi.ngc.nvidia.com"
reference = "ngc"

[[package]]
name = "packaging"
version = "20.9"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pyparsing = ">=2.0.2"

[[package]]
name = "pandas"
version = "1.5.1"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = [
    {version = ">=1.20.3", markers = "python_version < \"3.10\""},
    {version = ">=1.21.0", markers = "python_version >= \"3.10\""},
]
python-dateutil = ">=2.8.1"
pytz = ">=2020.1"

[package.extras]
test = ["hypothesis (>=5.5.3)", "pytest (>=6.0)", "pytest-xdist (>=1.31)"]

[[package]]
name = "pillow"
version = "9.2.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-issues (>=3.0.1)", "sphinx-removed-in", "sphinxext-opengraph"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "protobuf"
version = "3.19.6"
description = "Protocol Buffers"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pyerfa"
version = "2.0.0.1"
description = "Python bindings for ERFA"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.17"

[package.extras]
docs = ["sphinx-astropy (>=1.3)"]
test = ["pytest", "pytest-doctestplus (>=0.7)"]

[[package]]
name = "pyjwt"
version = "2.6.0"
description = "JSON Web Token implementation in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
crypto = ["cryptography (>=3.4.0)"]
dev = ["sphinx (>=4.5.0,<5.0.0)", "sphinx-rtd-theme", "zope.interface", "cryptography (>=3.4.0)", "pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)", "pre-commit"]
docs = ["sphinx (>=4.5.0,<5.0.0)", "sphinx-rtd-theme", "zope.interface"]
tests = ["pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)"]

[[package]]
name = "pyopenssl"
version = "22.1.0"
description = "Python wrapper module around the OpenSSL library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cryptography = ">=38.0.0,<39"

[package.extras]
docs = ["sphinx (!=5.2.0,!=5.2.0.post0)", "sphinx-rtd-theme"]
test = ["flaky", "pretend", "pytest (>=3.0.1)"]

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pyrxp"
version = "3.0.1"
description = "Python RXP interface - fast validating XML parser"
category = "main"
optional = false
python-versions = ">=3.6, <4"

[[package]]
name = "pytest"
version = "6.2.5"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
toml = "*"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "requests", "xmlschema"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-rapidjson"
version = "1.9"
description = "Python wrapper around rapidjson"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pytz"
version = "2022.5"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "requests"
version = "2.28.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<3"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "safe-netrc"
version = "1.0.0"
description = "Safe netrc file parser"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "scipy"
version = "1.7.3"
description = "SciPy: Scientific Library for Python"
category = "main"
optional = false
python-versions = ">=3.7,<3.11"

[package.dependencies]
numpy = ">=1.16.5,<1.23.0"

[[package]]
name = "scitokens"
version = "1.7.2"
description = "SciToken reference implementation library"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
cryptography = "*"
PyJWT = ">=1.6.1"
setuptools = "*"
six = "*"

[[package]]
name = "setuptools"
version = "65.5.0"
description = "Easily download, build, install, upgrade, and uninstall Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "jaraco.tidelift (>=1.4)", "pygments-github-lexers (==0.0.5)", "sphinx-favicon", "sphinx-inline-tabs", "sphinx-reredirects", "sphinxcontrib-towncrier", "sphinx-notfound-page (==0.8.3)", "sphinx-hoverxref (<2)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "flake8 (<5)", "pytest-enabler (>=1.3)", "pytest-perf", "mock", "flake8-2020", "virtualenv (>=13.0.0)", "wheel", "pip (>=19.1)", "jaraco.envs (>=2.2)", "pytest-xdist", "jaraco.path (>=3.2.0)", "build", "filelock (>=3.4.0)", "pip-run (>=8.8)", "ini2toml[lite] (>=0.9)", "tomli-w (>=1.0.0)", "pytest-black (>=0.3.7)", "pytest-cov", "pytest-mypy (>=0.9.1)"]
testing-integration = ["pytest", "pytest-xdist", "pytest-enabler", "virtualenv (>=13.0.0)", "tomli", "wheel", "jaraco.path (>=3.2.0)", "jaraco.envs (>=2.2)", "build", "filelock (>=3.4.0)"]

[[package]]
name = "setuptools-scm"
version = "7.0.5"
description = "the blessed package to manage your versions by scm tags"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=20.0"
setuptools = "*"
tomli = ">=1.0.0"
typing-extensions = "*"

[package.extras]
test = ["pytest (>=6.2)", "virtualenv (>20)"]
toml = ["setuptools (>=42)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tables"
version = "3.7.0"
description = "Hierarchical datasets for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numexpr = ">=2.6.2"
numpy = ">=1.19.0"
packaging = "*"

[package.extras]
doc = ["sphinx (>=1.1)", "sphinx-rtd-theme", "numpydoc", "ipython"]

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "torch"
version = "1.12.1"
description = "Tensors and Dynamic neural networks in Python with strong GPU acceleration"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
typing-extensions = "*"

[[package]]
name = "torchtyping"
version = "0.1.4"
description = "Runtime type annotations for the shape, dtype etc. of PyTorch Tensors."
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
torch = ">=1.7.0"
typeguard = ">=2.11.1"

[[package]]
name = "tqdm"
version = "4.64.1"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["py-make (>=0.1.0)", "twine", "wheel"]
notebook = ["ipywidgets (>=6)"]
slack = ["slack-sdk"]
telegram = ["requests"]

[[package]]
name = "tritonclient"
version = "2.26.0"
description = "Python client library and utilities for communicating with Triton Inference Server"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
aiohttp = {version = ">=3.8.1", optional = true, markers = "extra == \"all\""}
geventhttpclient = {version = ">=1.4.4", optional = true, markers = "extra == \"all\""}
grpcio = {version = "1.41.0", optional = true, markers = "extra == \"all\""}
numpy = ">=1.19.1"
protobuf = {version = ">=3.5.0,<3.20", optional = true, markers = "extra == \"all\""}
python-rapidjson = ">=0.9.1"

[package.extras]
all = ["protobuf (>=3.5.0,<3.20)", "grpcio (==1.41.0)", "numpy (>=1.19.1)", "python-rapidjson (>=0.9.1)", "geventhttpclient (>=1.4.4)", "aiohttp (>=3.8.1)"]
grpc = ["protobuf (>=3.5.0,<3.20)", "grpcio (==1.41.0)", "numpy (>=1.19.1)", "python-rapidjson (>=0.9.1)"]
http = ["geventhttpclient (>=1.4.4)", "aiohttp (>=3.8.1)", "numpy (>=1.19.1)", "python-rapidjson (>=0.9.1)"]

[[package]]
name = "typeguard"
version = "2.13.3"
description = "Run-time type checker for Python"
category = "main"
optional = false
python-versions = ">=3.5.3"

[package.extras]
doc = ["sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["pytest", "typing-extensions", "mypy"]

[[package]]
name = "typing-extensions"
version = "4.4.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "1.26.12"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (>=1.0.9)", "brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "wheel"
version = "0.37.1"
description = "A built-package format for Python"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.extras]
test = ["pytest (>=3.0.0)", "pytest-cov"]

[[package]]
name = "yarl"
version = "1.8.1"
description = "Yet another URL library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"

[[package]]
name = "zope.event"
version = "4.5.0"
description = "Very basic event publishing system"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
setuptools = "*"

[package.extras]
docs = ["sphinx"]
test = ["zope.testrunner"]

[[package]]
name = "zope.interface"
version = "5.5.0"
description = "Interfaces for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
setuptools = "*"

[package.extras]
docs = ["sphinx", "repoze.sphinx.autointerface"]
test = ["coverage (>=5.0.3)", "zope.event", "zope.testing"]
testing = ["coverage (>=5.0.3)", "zope.event", "zope.testing"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.8,<3.11"
content-hash = "d9db94b6fb625f3e499a3919510d63b08ee97293d088514a912e287c57dd246b"

[metadata.files]
aiohttp = []
aiosignal = []
astropy = []
async-timeout = []
atomicwrites = []
attrs = []
"bbhnet.architectures" = []
"bbhnet.base" = []
"bbhnet.data" = []
"bbhnet.injection" = []
"bbhnet.logging" = []
bilby = []
brotli = []
certifi = []
cffi = []
charset-normalizer = []
colorama = []
contourpy = []
corner = []
cryptography = []
cycler = []
dill = []
dqsegdb2 = []
dynesty = []
emcee = []
fonttools = []
frozenlist = []
gevent = []
geventhttpclient = []
greenlet = []
grpcio = []
gwdatafind = []
gwosc = []
gwpy = []
h5py = []
"hermes.quiver" = []
"hermes.typeo" = []
idna = []
igwn-auth-utils = []
iniconfig = []
kiwisolver = []
lalsuite = []
ligo-segments = []
ligotimegps = []
lscsoft-glue = []
matplotlib = []
ml4gw = []
mock = []
multidict = []
numexpr = []
numpy = []
nvidia-cublas-cu11 = [
    {file = "nvidia-cublas-cu11-2022.4.8.tar.gz", hash = "sha256:3a6cf7e9822c64b2ab864b7dffba4be9245f08365aa585910bd17d1eb1489cd3"},
]
nvidia-cublas-cu117 = [
    {file = "nvidia_cublas_cu117-11.10.1.25-py3-none-manylinux1_x86_64.whl", hash = "sha256:c6c663db1679ab934c7aebaa7253982572eb3db22bc2788f2c034412b2057422"},
    {file = "nvidia_cublas_cu117-11.10.1.25-py3-none-win_amd64.whl", hash = "sha256:d9c0497558377d3e763ff08b2d0ae4e7feb354393c278deac27609fd49a0782d"},
]
nvidia-cuda-runtime-cu11 = [
    {file = "nvidia-cuda-runtime-cu11-2022.4.25.tar.gz", hash = "sha256:0e64da6ce497ab7a101a3e764ff5f6341234f2bcb38aa8ef8c6bb921338fa991"},
]
nvidia-cuda-runtime-cu117 = [
    {file = "nvidia_cuda_runtime_cu117-11.7.60-py3-none-manylinux1_x86_64.whl", hash = "sha256:7348e34821838bc460191f3fb0727483276d17cc1185eb2808db7f16f366a050"},
    {file = "nvidia_cuda_runtime_cu117-11.7.60-py3-none-win_amd64.whl", hash = "sha256:79bc6a5d268d2889993558c7fb53cfcdb312b819f322d5d5dbd7ac903193eb5d"},
]
nvidia-cudnn-cu11 = [
    {file = "nvidia-cudnn-cu11-2022.5.19.tar.gz", hash = "sha256:3252838d45dc3e69b4967f3d98a9d50cc16a7cb396882204bd22ee00c16c0de5"},
]
nvidia-cudnn-cu116 = [
    {file = "nvidia_cudnn_cu116-8.4.0.27-py3-none-manylinux1_x86_64.whl", hash = "sha256:1c2d487baf889a8d348221d7d1f8677bcb1ffc7f34ed52f4e0ed44ff597fde99"},
]
nvidia-tensorrt = [
    {file = "nvidia_tensorrt-8.2.3.0-cp36-none-linux_x86_64.whl", hash = "sha256:78cb683e55c4d87d5a1ec2b14ef6e9e676d53007b2a5fb68eaab923012126a70"},
    {file = "nvidia_tensorrt-8.2.3.0-cp37-none-linux_x86_64.whl", hash = "sha256:cc7f4350995d193bfa2934bb72bbff848492ee1aa011daf29909b530dd5c83f8"},
    {file = "nvidia_tensorrt-8.2.3.0-cp38-none-linux_x86_64.whl", hash = "sha256:0952be8f626588bc72c5593ff6034e0e15d993986f63ea48964a83da1f6f919e"},
    {file = "nvidia_tensorrt-8.2.3.0-cp39-none-linux_x86_64.whl", hash = "sha256:9eedaa3c5ad77fe96b89b459b4bcc98629b7182e322a3a114990781cc7e300aa"},
]
packaging = []
pandas = []
pillow = []
pluggy = []
protobuf = []
py = []
pycparser = []
pyerfa = []
pyjwt = []
pyopenssl = []
pyparsing = []
pyrxp = []
pytest = []
python-dateutil = []
python-rapidjson = []
pytz = []
requests = []
safe-netrc = []
scipy = []
scitokens = []
setuptools = []
setuptools-scm = []
six = []
tables = []
toml = []
tomli = []
torch = []
torchtyping = []
tqdm = []
tritonclient = []
typeguard = []
typing-extensions = []
urllib3 = []
wheel = []
yarl = []
"zope.event" = []
"zope.interface" = []
